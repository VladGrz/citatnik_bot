from aiogram.types import Message, CallbackQuery
from aiogram.utils.exceptions import MessageNotModified

from loader import dp
from bot.keyboards.settings_kb import user_pivacy_kb
from data.database import change_user_private_setting, reg_user

privat = {
    True: "–ø—Ä–∏–≤–∞—Ç–Ω—ñ",
    False: "–Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω—ñ"
}


@dp.message_handler(commands='settings', state='*')
async def settings(message: Message):
    """ Catches `/settings` command. """

    # Sending settings message with keyboard to change privacy type
    await message.reply("–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –≤–∞—à–∏—Ö —Ü–∏—Ç–∞—Ç, "
                         "–¥–ª—è —Ü—å–æ–≥–æ –∫–ª–∞—Ü–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É.\n\n"
                         "‚úÖ - –æ–∑–Ω–∞—á–∞—î, —â–æ –≤–∞—à—ñ —Ü–∏—Ç–∞—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ, "
                         "–≤–æ–Ω–∏ –Ω–µ –±—É–¥—É—Ç—å –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏—Å—å –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É —Å–ø–∏—Å–∫—É "
                         "—Ü–∏—Ç–∞—Ç —ñ, –ø—ñ–¥ —á–∞—Å –≤–∏–±–æ—Ä—É —Ü–∏—Ç–∞—Ç –≤ –≥—Ä—É–ø—ñ, "
                         "—ñ–Ω—à–∞ –ª—é–¥–∏–Ω–∞ –Ω–µ "
                         "–∑–º–æ–∂–µ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ü–∏—Ç–∞—Ç—É –∑ –≤–∞—à–æ–≥–æ —Å–ø–∏—Å–∫—É."
                         "\n‚ùå - –æ–∑–Ω–∞—á–∞—î, —â–æ –≤–∞—à—ñ —Ü–∏—Ç–∞—Ç–∏ –Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω—ñ.",
                         reply_markup=await user_pivacy_kb(
                             message.from_user.id))


@dp.callback_query_handler(text_startswith='change_pivacy', state='*')
async def change_privacy(call: CallbackQuery):
    """ Catches pressing a button which changes privacy. """

    # Getting the id of user from the callback to check if user that pressed
    # the button is the same that requested settings message
    user = int(call.data.split(':')[1])
    if user == call.from_user.id:
        privacy = await change_user_private_setting(call.from_user.id)
        if privacy is None:
            # If no privacy setting was found it means user uses bot for the
            # first time, and we should register him
            await reg_user(call)
            privacy = True
        try:
            # Trying to change keyboard
            await call.message.edit_reply_markup(
                await user_pivacy_kb(call.from_user.id)
            )
        except MessageNotModified:
            # If message was not modified we do nothing
            pass
        finally:
            # Finally, we show user a warning with current privacy
            await call.answer(f'–í–∞—à—ñ —Ü–∏—Ç–∞—Ç–∏ {privat[privacy]}.')
    else:
        # We show an alert that only user that called settings can change them
        await call.answer(f'–¶—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–µ –¥–ª—è –≤–∞—Åü§™. –ù–∞–ø–∏—à—ñ—Ç—å /settings '
                          '—ñ —è –Ω–∞–¥—ñ—à–ª—é –≤–∞–º –≤–∞—à—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è.',
                          show_alert=True)

